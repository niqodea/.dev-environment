# Set zsh as default shell and run it as a non-login shell
# Rationale: login shell that launched tmux already sourced login files
# Ref: https://superuser.com/a/1330842
set -g default-command zsh
set-environment -g ZSH_REQUESTED_EXTRA_MODULES "tmux"

# Creating sessions and windows
# Sessions are assigned a root that we inject to the Z shells as environment
# We set session root with two commands, one is for the first session shell, one is for the others
bind -n M-C command-prompt -p "Session name:" "run-shell 'mkdir -p $HOME/%1; cp -n $HOME/.zsh-modules-env.zsh.sample $HOME/%1' \; new-session -c $HOME/%1 -s %1 'ZSH_ROOT=$HOME/%1 zsh' \; setenv ZSH_ROOT $HOME/%1"
bind -n M-c new-window

# Colorize terminal (compatible with neovim)
set -g default-terminal "tmux-256color"

# More visible pane borders
# Ref: https://unix.stackexchange.com/a/141252
set -g pane-border-style fg=magenta

# Get rid of escape-key delay
# Ref: https://superuser.com/questions/942677
set -sg escape-time 0

# Rebind prefix key
# Ref: https://superuser.com/questions/1287428
unbind C-b
set-option -g prefix M-a
bind M-a send-prefix

# Vim-like pane navigation
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Vim-like window & session navigation
bind -n M-L next-window
bind -n M-H previous-window
bind -n M-J switch-client -n
bind -n M-K switch-client -p

# Vim-like pane splits
bind -n M-s split-window -v
bind -n M-v split-window -h
# Split on the other direction
bind -n M-S split-window -bv
bind -n M-V split-window -bh

# Vim-like pane resize
bind -n M-C-h resize-pane -L 2
bind -n M-C-j resize-pane -D 2
bind -n M-C-k resize-pane -U 2
bind -n M-C-l resize-pane -R 2

# Vim-like copy-mode (vim's terminal-to-normal mode)
bind -n M-n copy-mode  # n stands for normal
bind -T copy-mode-vi 'i' send-keys -X cancel  # i stands for insert

# Vim-like text selection
bind -T copy-mode-vi 'v' \
    if-shell '[ "$(tmux display-message -p -F #{rectangle_toggle})" -eq 1 ]' 'send-keys -X rectangle-toggle' \; \
    send-keys -X begin-selection
bind -T copy-mode-vi C-v \
    if-shell '[ "$(tmux display-message -p -F #{rectangle_toggle})" -eq 0 ]' 'send-keys -X rectangle-toggle' \; \
    send-keys -X begin-selection
bind -T copy-mode-vi 'V' send-keys -X select-line
bind -T copy-mode-vi 'y' send-keys -X copy-selection
bind -T copy-mode-vi 'Y' send-keys -X copy-line


# Vim-like paste-buffer
bind -n M-p paste-buffer

# Renaming windows
# Ref: https://www.reddit.com/r/tmux/comments/4red05/cant_rebind_r_to_renamewindow_in_tmuxconf_any_help
bind -n M-r command-prompt -I "#W" "rename-window '%%'"

# Fast access to useful commands
bind -n M-: command-prompt
bind -n M-z resize-pane -Z

# Enable pane names
# Ref: https://stackoverflow.com/a/37602055
set -g pane-border-status top
# Show command with parameters on top of panes
# Ref: https://github.com/tmux/tmux/issues/733#issuecomment-358632846
set -g pane-border-format '#{pane_title}'

# Use vi instead of emacs in tmux copy-mode and status line
# Ref: https://superuser.com/a/1562662
# Ref: https://unix.stackexchange.com/a/412614
set -g mode-keys vi
set -g status-keys vi
# Note: exporting VISUAL and EDITOR does not work for some reason
# Ref: https://github.com/tmux/tmux/issues/305

# Raise scrollback-buffer size
set -g history-limit 20000

# Source modules
run-shell 'for f in ~/.tmux-modules/*.tmux.conf; do tmux source-file $f; done'

# NOTES:
# C- is the ctrl key, M- is the meta key (i.e. alt)
# Ref: https://unix.stackexchange.com/a/140010
# The -n argument is for keys pressed without the prefix
# Ref: https://superuser.com/a/240972
# The -r argument is for keys that may repeat after a single prefix
# Ref: https://superuser.com/a/484431
